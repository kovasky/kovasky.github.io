<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Blogs on Kovasky Buezo | Software Developer, Cybersecurity Enthusiast</title><link>https://kovasky.me/blogs/</link><description>Recent content in Blogs on Kovasky Buezo | Software Developer, Cybersecurity Enthusiast</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 18 Aug 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://kovasky.me/blogs/index.xml" rel="self" type="application/rss+xml"/><item><title>Configure HAProxy with Authelia on pfSense</title><link>https://kovasky.me/blogs/pfsense_haproxy_authelia/</link><pubDate>Mon, 18 Aug 2025 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/pfsense_haproxy_authelia/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;Some of my hosted services do not have OIDC support or any sort of authentication out of the box. Since I am already running an instance of Authelia, I decided to use it to secure those services. It was not as straight forward as I thought, specially using HAProxy on pfSense. There are a few outdated guides that accomplish this but they still missed a step or two to get it working right.&lt;/p&gt;</description></item><item><title>Connect Fail2Ban with pfSense</title><link>https://kovasky.me/blogs/pfsense_fail2ban/</link><pubDate>Sun, 03 Aug 2025 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/pfsense_fail2ban/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;Some of my self-hosted services don&amp;rsquo;t play nicely with Cloudflare proxying. This has led me to use DNS and forgo Cloudflare&amp;rsquo;s protection. Many of the guides out there require pfBlockerNG or the use of scripts that authenticate to pfSense via SSH. This guide will help you integrate Fail2Ban with pfSense using only alias lists.&lt;/p&gt;
&lt;h2 id="serving-the-banlist"&gt;Serving the banlist&lt;/h2&gt;
&lt;p&gt;You need a web server configured to serve a txt file. There are multiple ways you can achieve this but in this case, we&amp;rsquo;ll install an Apache server on a Debian-based Docker host.&lt;/p&gt;</description></item><item><title>How to passthrough an RTX 5000 series GPU to Proxmox</title><link>https://kovasky.me/blogs/rtx_5000_passthrough/</link><pubDate>Sun, 20 Jul 2025 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/rtx_5000_passthrough/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;I recently acquired an RTX 5060 GPU and had to look at multiple sources in order to get passthrough working. This will outline all the steps I took in order to get it working on my Dell Poweredge T440 server.&lt;/p&gt;
&lt;h2 id="update"&gt;Update&lt;/h2&gt;
&lt;p&gt;At the time of the post edit, Proxmox 9 has been released. I have updated my host to the new version and used
the &lt;a href="https://nvidia.custhelp.com/app/answers/detail/a_id/5665/~/nvidia-gpu-uefi-firmware-update-tool-for-rtx-5060-series" target="_blank"&gt;update tool for RTX 5060 seriesðŸ”—&lt;/a&gt; provided by Nvidia. This runs only on Windows so I have passed-through my GPU to a windows VM in order to run the update.&lt;/p&gt;</description></item><item><title>Send push notifications to your mobile phone with ntfy.sh via PowerShell</title><link>https://kovasky.me/blogs/powershell_ntfy/</link><pubDate>Tue, 08 Jul 2025 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/powershell_ntfy/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;I had a few PowerShell tasks set up in my server with no way of knowing their status unless I checked for logs. Logging in and searching for logs easily becomes a hassle when you have more than one VM. I needed a less time consuming method, so I found a way to send push alerts to my mobile phone using ntfy.&lt;/p&gt;
&lt;h2 id="pre-requisites"&gt;Pre-requisites&lt;/h2&gt;
&lt;p&gt;For this setup to work, you should have a running instance of ntfy.sh. You can find the installation instructions &lt;a href="https://docs.ntfy.sh/install/"&gt;here&lt;/a&gt;. You can find my personal docker compose file &lt;a href="https://kovasky.me/blogs/proxmox_ntfy/"&gt;here&lt;/a&gt;&lt;/p&gt;</description></item><item><title>Use Authelia as a social login provider for ERPNext</title><link>https://kovasky.me/blogs/erpnext_authelia/</link><pubDate>Sun, 11 May 2025 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/erpnext_authelia/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;At the time of writing this post, I found no guide on setting up Authelia as a social provider for ERPNext. These are the steps I took to link them.&lt;/p&gt;
&lt;h2 id="authelia"&gt;Authelia&lt;/h2&gt;
&lt;p&gt;If you have an LDAP server configured, you have to make sure the correct attributes are retrieved. The attributes section should look like follows.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-yaml" data-lang="yaml"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;authentication_backend&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;ldap&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;implementation&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;custom&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;address&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;ldap://&amp;lt;server ip address&amp;gt;:389&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;start_tls&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;tls&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;skip_verify&lt;/span&gt;: &lt;span style="color:#66d9ef"&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;minimum_version&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;TLS1.2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;base_dn&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;DC=mydomain,DC=com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;attributes&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;username&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;sAMAccountName&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;group_name&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;cn&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;mail&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;mail&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;display_name&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;displayname&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;given_name&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;givenName&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;family_name&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;sn&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;users_filter&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;(&amp;amp;(|({username_attribute}={input})({mail_attribute}={input}))(objectCategory=person)(objectClass=user)(!userAccountControl:1.2.840.113556.1.4.803:=2)(!pwdLastSet=0))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;groups_filter&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;(&amp;amp;(member:1.2.840.113556.1.4.1941:={dn})(objectClass=group)(objectCategory=group))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;user&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;CN=&amp;lt;bind account username&amp;gt;,CN=Users,DC=mydomain,DC=com&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt; &lt;span style="color:#f92672"&gt;password&lt;/span&gt;: &lt;span style="color:#ae81ff"&gt;&amp;lt;bind account password&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Once the ldap section is correct, you should proceed to the identity providers section to configure the ERPNext client. The client configuration for erpnext should look as follows:&lt;/p&gt;</description></item><item><title>Intel Arc A380 performance benchmark with no Resizable BAR in a Dell Poweredge T440</title><link>https://kovasky.me/blogs/intel_arc_no_rebar/</link><pubDate>Mon, 10 Mar 2025 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/intel_arc_no_rebar/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;I took a leap of faith by buying an Intel Alchemist series GPU, even after countless people online advised against purchasing one if the target system doesn&amp;rsquo;t support Resizable BAR. Still, AV1 at this price point felt too compelling to pass up, even if it meant subpar graphical performance. My main intent was transcoding media, so I didn&amp;rsquo;t think I would mind.&lt;/p&gt;
&lt;p&gt;I didn&amp;rsquo;t expect much, but the Intel Arc A380 performed surprisingly well for my needs, showing results close to a GTX 1650. Best of all, converting my media to AV1 has already saved over 9TB of storage space (more than a 50% reduction in space usage).&lt;/p&gt;</description></item><item><title>Build and run ollama with vulkan support to enable local inference on Intel Arc GPUs</title><link>https://kovasky.me/blogs/ollama_vulkan_intel/</link><pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/ollama_vulkan_intel/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;I have an Intel Arc A380 in my Dell T440 server for Plex and remote gaming through Sunshine. I set up &lt;a href="https://hoarder.app"&gt;Hoarder&lt;/a&gt; and wanted a way to use the AI features without paying for OpenAI tokens. This proved extremely difficult, as none of the readily available solutions seemed to work.&lt;/p&gt;
&lt;p&gt;This was until I tried LMStudio. LMStudio worked out of the box, but launching it in a headless manner on boot is not possible (at least for me), not to mention the incompatibility of its OpenAPI implementation with Hoarder. I later learned that LMStudio uses a vulkan backend, and went on a quest to find an ollama version with vulkan support.&lt;/p&gt;</description></item><item><title>Set up centralized SSH key storage for external Active Directory users in FreeIPA (including FIDO2 hardware keys)</title><link>https://kovasky.me/blogs/ad_trust_ssh/</link><pubDate>Mon, 03 Feb 2025 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/ad_trust_ssh/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;I was tired of entering my password every time I SSH&amp;rsquo;d to my VMs, but setting up SSH keys would mean manually copying my public key to each host I wanted to connect to. I then read about one key feature of FreeIPA, which is serving as a centralized key repository.&lt;/p&gt;
&lt;p&gt;This posed another problem: I donâ€™t have any users in FreeIPA, as I mainly use my AD credentials (FreeIPA is one way only, and many services interact directly with Active Directory). Hereâ€™s how I generated and stored my AD userâ€™s public key in FreeIPA, which allows me to remote into any enrolled device without manually distributing the keys.&lt;/p&gt;</description></item><item><title>Install the scrutiny collector in a Synology NAS to view historical trends in your drives' health</title><link>https://kovasky.me/blogs/synology_scrutiny/</link><pubDate>Sat, 25 Jan 2025 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/synology_scrutiny/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;I set up scrutiny to monitor the drives in my Proxmox host. I like having access to all the SMART data in my drives in one single spot, so I decided to include my NAS&amp;rsquo; drives as well. This is how I did it.&lt;/p&gt;
&lt;h2 id="pre-requisites"&gt;Pre-requisites&lt;/h2&gt;
&lt;p&gt;Scrutiny depends on smartctl v7+ which, unfortunately, my NAS did not have. To check the version of smartctl that your NAS has installed, SSH into it and issue the command &lt;code&gt;/usr/bin/smartctl -i&lt;/code&gt;. If your smartctl version is lower than 7, you will need to install Entware. For instructions to do so, please visit this &lt;a href="https://github.com/Entware/Entware/wiki/Install-on-Synology-NAS"&gt;link&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Set up scheduled SMART tests on Proxmox and send alerts via push notifications to your mobile phone</title><link>https://kovasky.me/blogs/proxmox_ntfy/</link><pubDate>Tue, 14 Jan 2025 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/proxmox_ntfy/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;My Synology NAS sends weekly (quick tests) and monthly (extended tests) health reports of its hard drives to my email. I wanted to add this functionality to my Proxmox server to keep an eye on my drives. After some trial and error, I successfully achieved this functionality. Now, I receive these notifications on my phone with the help of ntfy.sh. Here are the steps I took to make it work.&lt;/p&gt;</description></item><item><title>Automatically renew WAN lease on pfSense without rebooting</title><link>https://kovasky.me/blogs/pfsense_wan_update/</link><pubDate>Tue, 10 Dec 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/pfsense_wan_update/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;Every now and again I would wake up to my internet being down while my local network being fine. This usually happened when my ISP renewed my assigned IP overnight. The only solution was to reboot my pfSense VM to force the IP lease renewal. Searching the web I discovered it was not uncommon for people to experience this with certain types of modems and virtualized pfSense instances. Here&amp;rsquo;s how I resolved it in my homelab.&lt;/p&gt;</description></item><item><title>Set up multiple domains on one public IP using HAProxy on pfSense</title><link>https://kovasky.me/blogs/haproxy_multi_domain/</link><pubDate>Sat, 16 Nov 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/haproxy_multi_domain/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;I recently acquired a second domain for one of my projects and wanted to set this up behind the HAProxy instance in my firewall. The problem was that I was already serving my primary domain with it, so I was looking to serve my secondary one as well. It was not as straightforward as I thought but after a bit of Googling and some trial and error, I could proxy multiple domains sharing the same public IP. Here&amp;rsquo;s how I did it!&lt;/p&gt;</description></item><item><title>Enabling SR-IOV for an Intel X540-T2 on Proxmox 8</title><link>https://kovasky.me/blogs/sr_iov/</link><pubDate>Mon, 12 Aug 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/sr_iov/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;In the quest to get more performance out of my inter-vm communication, I stumbled upon SR-IOV and virtual functions. I then purchased a 10gbe X540-T2 from a Chinese seller on eBay making sure to get one with a fan, as reports of this specific card say it runs quite hot. After setting everything up, I increased my network performance from 2.5gbps on a vSwitch to 14gbps with virtual function passthrough.&lt;/p&gt;</description></item><item><title>How to configure a MeshCentral client to replace Xwayland with Xorg</title><link>https://kovasky.me/blogs/meshcentral_xorg/</link><pubDate>Sat, 13 Jul 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/meshcentral_xorg/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;After deploying the MeshCentral agents to my VMs, I noticed that some of them produced an error screen complaining about Xwayland. This was as simple as modifying a config file and restarting a service.&lt;/p&gt;
&lt;h2 id="modifying-customconf"&gt;Modifying custom.conf&lt;/h2&gt;
&lt;p&gt;Depending on your system, you will have to navigate to /etc/gdm or /etc/gdm3. Inside this folder you will find a file named custom.conf. It will look something like:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# GDM configuration storage&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;daemon&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Uncomment the line below to force the login screen to use Xorg&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#WaylandEnable=false&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;security&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;xdmcp&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;chooser&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;debug&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;# Uncomment the line below to turn on debugging&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#75715e"&gt;#Enable=true&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;All you have to do, is uncomment the line WaylandEnable=false. After doing so, it should look like:&lt;/p&gt;</description></item><item><title>Enable implicit consent for clients using Authelia OIDC</title><link>https://kovasky.me/blogs/no_consent/</link><pubDate>Sun, 02 Jun 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/no_consent/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;Enabling SSO for all self-hosted services that support it has been one of the best decisions in my homelab. It has created a seamless &amp;ldquo;ecosystem&amp;rdquo; experience for my friends and family (mainly myself ðŸ¥²). The problem is that every time I logged in to my services, it prompted me with a consent form which I quickly grew tired of. To remove this consent page in all my connected OIDC clients, I enabled implicit consent.&lt;/p&gt;</description></item><item><title>Set up Plausible Analytics Community Edition (self-hosted)</title><link>https://kovasky.me/blogs/plausible/</link><pubDate>Mon, 13 May 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/plausible/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;In the search for an open-source Google Analytics alternative, two options stood out Matomo and Plausible. I wanted the tool to be privacy-friendly and that it did not require cookies, avoiding those pesky consent prompts. I did not find a straightforward guide to self-host Plausible with a Google Search Console integration which led me to create this post.&lt;/p&gt;
&lt;h2 id="pre-requisite"&gt;Pre-requisite&lt;/h2&gt;
&lt;p&gt;Ensure that your domain&amp;rsquo;s ownership is confirmed in the Google Search Console. To do this, take a look at Google&amp;rsquo;s guide &lt;a href="https://support.google.com/webmasters/answer/34592?hl=en"&gt;here&lt;/a&gt;.&lt;/p&gt;</description></item><item><title>Set up Outline Wiki with local object storage and OIDC integration</title><link>https://kovasky.me/blogs/get_outline/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/get_outline/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;I started using Notion&amp;rsquo;s free tier as a knowledge bank for a side project. It&amp;rsquo;s measley 1000 blocks were capped quickly and searching for an alternative lead to Outline. Outline is 100% free, selfhostable, and has a very similar featureset.&lt;/p&gt;
&lt;p&gt;Most of the guides out there configure Outline with an S3 store for object storage, but I do not really have a need for it. Also, I wanted to integrate Outline with Authelia for integration with my Active Directory server as well as Fail2Ban.&lt;/p&gt;</description></item><item><title>Set up a ramdisk for Plex</title><link>https://kovasky.me/blogs/plex_ramdisk/</link><pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/plex_ramdisk/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;Always on the lookout to decrease writes on my consumer SSDs, I stumbled upon the idea of a ramdisk for Plex transcodes. In theory it should offer a performance boost, but in practice I did not really notice any improvements besides lowering SSD writes.&lt;/p&gt;
&lt;h2 id="editing-fstab"&gt;Editing fstab&lt;/h2&gt;
&lt;p&gt;Navigate to /etc/fstab and open it for edition. You should see your boot disk and any other mapped media there. Add the following line:&lt;/p&gt;</description></item><item><title>iDRAC 9 manual fan control on Dell PowerEdge servers</title><link>https://kovasky.me/blogs/fan_control/</link><pubDate>Mon, 15 Apr 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/fan_control/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;I recently acquired a Dell Poweredge T440, and after installing a GPU the fans skyrocketed. This turned the server into a noise machine. To solve this, I created a script that disables third-party PCI mode and based on a threshold, set the fan speed to 20% or to be controlled by Dell&amp;rsquo;s fan profile. These are the steps I took to make my T440 silent again.&lt;/p&gt;
&lt;h2 id="downgrading-idrac-9-firmware-to-3303030"&gt;Downgrading iDRAC 9 firmware to 3.30.30.30&lt;/h2&gt;
&lt;p&gt;For this whole setup to work, iDRAC needs to be on firmware 3.30.30.30, as later firmware revisions remove the ability to control the fan speed. The firmware can be downloaded from &lt;a href="https://www.dell.com/support/home/en-us"&gt;Dell&amp;rsquo;s website&lt;/a&gt;. To downgrade, navigate to your iDRAC&amp;rsquo;s web admin page, and under Maintenance-&amp;gt;System Update you can apply the downgrade. After the downgrade, make sure IPMI over LAN is enabled under iDRAC Settings-&amp;gt;Connectivity-&amp;gt;Network-&amp;gt;IPMI Settings.&lt;/p&gt;</description></item><item><title>Disk passthrough for vms in Proxmox</title><link>https://kovasky.me/blogs/disk_passthrough/</link><pubDate>Thu, 04 Apr 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/disk_passthrough/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;It has always been recommended to give ZFS full disk control, so after placing my raid card in HBA mode, I went ahead and gave full disk control to my TrueNAS vm.&lt;/p&gt;
&lt;h2 id="figuring-out-the-id-of-the-disk"&gt;Figuring out the id of the disk&lt;/h2&gt;
&lt;p&gt;Typically, disks are labeled as /dev/sdX, but this can change when adding other drives or moving them around. To circumvent this, it is better to figure out the specific id of the disk to be passed through. To do this, execute the following:&lt;/p&gt;</description></item><item><title>Replace the default shell for domain users on Linux</title><link>https://kovasky.me/blogs/login_shell/</link><pubDate>Tue, 02 Apr 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/login_shell/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;After setting up the AD trust, every time I logged in the shell defaulted to /bin/sh. To change it to /bin/bash or any other shell of your choice you can do the following.&lt;/p&gt;
&lt;h2 id="editing-sssdconf"&gt;Editing SSSD.conf&lt;/h2&gt;
&lt;p&gt;Navigate to /etc/sssd/ and open sssd.conf in an elevated text editor. It should look something like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;domain/lin.mydomain.com&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;use_fully_qualified_names &lt;span style="color:#f92672"&gt;=&lt;/span&gt; false
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;domain/lin.mydomain.com/win.mydomain.com&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;use_fully_qualified_names &lt;span style="color:#f92672"&gt;=&lt;/span&gt; false
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;sssd&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;...&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;After each domain, add your override shell. Something like:&lt;/p&gt;</description></item><item><title>Using Fail2Ban with Cloudflare on a free account</title><link>https://kovasky.me/blogs/cloudflare_fail2ban/</link><pubDate>Mon, 25 Mar 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/cloudflare_fail2ban/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;To better protect my web accessible services, I decided to use Fail2Ban in conjunction with Cloudflare&amp;rsquo;s WAF to block IPs with more than 3 failed login attempts. I already leverage Cloudflare&amp;rsquo;s CDN and geo-blocking capabilities on my homelab, so I opted to utilize their WAF to block access to potential attackers.&lt;/p&gt;
&lt;p&gt;On the free tier, the WAF is limited to 5 rules, which can easily reach their limit. A workaround is to create a rule that uses a blocklist and then with the Lists API, update it as required.&lt;/p&gt;</description></item><item><title>Map an Active Directory group to sudo in Linux</title><link>https://kovasky.me/blogs/mapping_sudo/</link><pubDate>Wed, 21 Feb 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/mapping_sudo/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;After creating my domain trust between AD and FreeIPA, I was left wanting to access restricted resources in Linux using my AD accounts. To circumvent this, I mapped a group from AD to FreeIPA and gave it the appropriate permissions.&lt;/p&gt;
&lt;h2 id="create-the-group-in-ad"&gt;Create the group in AD&lt;/h2&gt;
&lt;p&gt;The first step would be to create a group in AD to which sudo will be mapped. In my case, I created a group named &amp;lsquo;sudo&amp;rsquo; to match the Linux counterpart. To do this, navigate to Server Manager -&amp;gt; Active Directory Users and Computers -&amp;gt; Users. Then, right-click and go to New -&amp;gt; Group. In the name, type &amp;lsquo;sudo&amp;rsquo;. After the item is created, it should look like:&lt;/p&gt;</description></item><item><title>Log in to Linux using AD credentials without specifying the domain</title><link>https://kovasky.me/blogs/no_domain_login/</link><pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/no_domain_login/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;After creating a trust in FreeIPA, I kept having to write the full domain alongside my username whenever I tried to access the system. These are the steps I took to log in only with my username.&lt;/p&gt;
&lt;h2 id="editing-sssdconf"&gt;Editing SSSD.conf&lt;/h2&gt;
&lt;p&gt;Navigate to /etc/sssd/ and open sssd.conf in an elevated text editor. It should look something like&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;domain/lin.mydomain.com&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;...
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;&lt;span style="color:#f92672"&gt;[&lt;/span&gt;sssd&lt;span style="color:#f92672"&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;services &lt;span style="color:#f92672"&gt;=&lt;/span&gt; nss, pam, ssh, sudo
&lt;/span&gt;&lt;/span&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;domains &lt;span style="color:#f92672"&gt;=&lt;/span&gt; lin.mydomain.com&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;p&gt;Before [sssd], add your trusted domain. Something like:&lt;/p&gt;</description></item><item><title>Setting up a cross-domain trust between FreeIPA and AD</title><link>https://kovasky.me/blogs/ad_trust/</link><pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/ad_trust/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve been playing around with FreeIPA in my homelab for a while and have always wanted to enable seamless authentication between all my hosts regardless of their operating system. I stumbled upon the concept of cross-domain trusts between FreeIPA and Active Directory which allows us to achieve this.&lt;/p&gt;
&lt;p&gt;There is a caveat though, and that is that two-way trusts are still not fully implemented in FreeIPA, which means Windows users can authenticate against Linux hosts but Linux users can&amp;rsquo;t do the same the other way around.&lt;/p&gt;</description></item><item><title>Starting a VM in Proxmox without Quorum</title><link>https://kovasky.me/blogs/oneshot/</link><pubDate>Wed, 01 Nov 2023 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/oneshot/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;One of the nodes in my lab runs pfSense and if the vm is down, my network is down. This prevents my nodes from reaching quorum, and thus preventing pfSense from starting. To solve this, I needed a way for the vm to start without quorum. This was achieved by creating a oneshot service that runs at system startup.&lt;/p&gt;
&lt;h2 id="create-the-script"&gt;Create the script&lt;/h2&gt;
&lt;p&gt;Create a script in a folder of your choice, like &lt;code&gt;/root/startpfSense.sh&lt;/code&gt;.&lt;/p&gt;</description></item><item><title>Homelab</title><link>https://kovasky.me/blogs/homelab/</link><pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/homelab/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;This is just a post to describe my homelab setup and make it linkable where needed (like in my resume). This is most definitely subject to change at any time as I continue to play with new technologies and keep adding things!&lt;/p&gt;
&lt;h2 id="hosts"&gt;Hosts&lt;/h2&gt;
&lt;p&gt;My homelab consists of a one node proxmox host and a terramaster NAS.&lt;/p&gt;
&lt;p&gt;The specs are:&lt;/p&gt;
&lt;h5 id="dell-poweredge-t440"&gt;Dell Poweredge T440&lt;/h5&gt;
&lt;ul&gt;
&lt;li&gt;2x Xeon Gold 6126 (48 logical cores)&lt;/li&gt;
&lt;li&gt;128GB RAM&lt;/li&gt;
&lt;li&gt;1x 118GB Intel Optane NVME&lt;/li&gt;
&lt;li&gt;2x 1TB MX500 SSD&lt;/li&gt;
&lt;li&gt;2x 8TB Toshiba SAS Drive&lt;/li&gt;
&lt;li&gt;1x 14TB IronWolf Pro Drive&lt;/li&gt;
&lt;li&gt;1x Nvidia Quadro M2000&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;For storage I have a TerraMaster F2-220 running DSM through tinycore with 2x 6TB Ironwolf HDDs.&lt;/p&gt;</description></item><item><title>Whitelisting in Suricata Package for pfSense</title><link>https://kovasky.me/blogs/whitelist/</link><pubDate>Wed, 13 Sep 2023 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/whitelist/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;After tirelessly looking for a solution in order to dynamically create a whitelist for Suricata based on DNS, I decided to create my own.&lt;/p&gt;
&lt;h2 id="download-the-necessary-files"&gt;Download the necessary files&lt;/h2&gt;
&lt;p&gt;Create a whitelist file with all the domains you wish whitelisted. A useful starting point is &lt;a href="https://github.com/anudeepND/whitelist"&gt;anudeepND&amp;rsquo;s collection of commonly white listed domains&lt;/a&gt;. After that, download my &lt;a href="https://github.com/kovasky/homelabscripts/blob/main/pfSense/suricata/generateRules.py"&gt;generateRules.py&lt;/a&gt; script.&lt;/p&gt;
&lt;p&gt;Place these files in a directory of your choice on your pfSense host. For simplicity, I just placed them in /root. Finally, make the script executable by &lt;code&gt;chmod +x ./generateRules.py&lt;/code&gt;.&lt;/p&gt;</description></item><item><title>Automatically create local home directory when logging in with FreeIPA</title><link>https://kovasky.me/blogs/homecreation/</link><pubDate>Wed, 07 Jun 2023 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/homecreation/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;While setting up my hosts with FreeIPA, I noticed that home directories were not being created when logging in through ssh. Looking online it seems that most people just use NFS shares to keep home directories the same across devices but I did not want to set up NFS home shares. Fixing this in RHEL-based distros is easy with authconfig but debian-based distros do not come with this. To fix this in debian-based distros is as easy as modiyfing the pam.d config file.&lt;/p&gt;</description></item><item><title>NTP server with GPS and chrony</title><link>https://kovasky.me/blogs/chronyd/</link><pubDate>Fri, 07 Apr 2023 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/chronyd/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;I wanted to easily synchronize the time between my VMs and decided to set up an ntp server to accomplish this. Since a USB GPS device is relatively inexpensive, I thought it would be a great addition to the project.&lt;/p&gt;
&lt;p&gt;For the following examples, I used aptitude and vim.&lt;/p&gt;
&lt;h2 id="prerequisite-packages"&gt;Prerequisite Packages&lt;/h2&gt;
&lt;p&gt;Run the following command to ensure we have the necessary packages:&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;"&gt;&lt;code class="language-bash" data-lang="bash"&gt;&lt;span style="display:flex;"&gt;&lt;span&gt;sudo apt-get update &lt;span style="color:#f92672"&gt;&amp;amp;&amp;amp;&lt;/span&gt; sudo apt-get install gpsd gpsd-clients chrony&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;
&lt;h2 id="check-dev-for-gps"&gt;Check /dev for GPS&lt;/h2&gt;
&lt;p&gt;Once the gps is connected to the pc, we need to figure out the assigned device. This can be any of /dev/ttyUSB0, /dev/ttyACM0 or /dev/ttyAMA0.&lt;/p&gt;</description></item></channel></rss>