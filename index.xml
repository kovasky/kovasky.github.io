<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kovasky Buezo</title>
    <link>https://kovasky.me/</link>
    <description>Recent content on Kovasky Buezo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 25 Mar 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://kovasky.me/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Using Fail2Ban with Cloudflare on a free account</title>
      <link>https://kovasky.me/blogs/cloudflare_fail2ban/</link>
      <pubDate>Mon, 25 Mar 2024 00:00:00 +0000</pubDate>
      
      <guid>https://kovasky.me/blogs/cloudflare_fail2ban/</guid>
      <description>Intro To better protect my web accessible services, I decided to use Fail2Ban in conjunction with Cloudflare&amp;rsquo;s WAF to block IPs with more than 3 failed login attempts. I already leverage Cloudflare&amp;rsquo;s CDN and geo-blocking capabilities on my homelab, so I opted to utilize their WAF to block access to potential attackers.
On the free tier, the WAF is limited to 5 rules, which can easily reach their limit. A workaround is to create a rule that uses a blocklist and then with the Lists API, update it as required.</description>
    </item>
    
    <item>
      <title>Map an Active Directory group to sudo in Linux</title>
      <link>https://kovasky.me/blogs/mapping_sudo/</link>
      <pubDate>Wed, 21 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://kovasky.me/blogs/mapping_sudo/</guid>
      <description>Intro After creating my domain trust between AD and FreeIPA, I was left wanting to access restricted resources in Linux using my AD accounts. To circumvent this, I mapped a group from AD to FreeIPA and gave it the appropriate permissions.
Create the group in AD The first step would be to create a group in AD to which sudo will be mapped. In my case, I created a group named &amp;lsquo;sudo&amp;rsquo; to match the Linux counterpart.</description>
    </item>
    
    <item>
      <title>Log in to Linux using AD credentials without specifying the domain</title>
      <link>https://kovasky.me/blogs/no_domain_login/</link>
      <pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://kovasky.me/blogs/no_domain_login/</guid>
      <description>Intro After creating a trust in FreeIPA, I kept having to write the full domain alongside my username whenever I tried to access the system. These are the steps I took to log in only with my username.
Editing SSSD.conf Navigate to /etc/sssd/ and open sssd.conf in an elevated text editor. It should look something like
[domain/lin.mydomain.com] ... [sssd] services = nss, pam, ssh, sudo domains = lin.mydomain.com Before [sssd], add your trusted domain.</description>
    </item>
    
    <item>
      <title>Setting up a cross-domain trust between FreeIPA and AD</title>
      <link>https://kovasky.me/blogs/ad_trust/</link>
      <pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate>
      
      <guid>https://kovasky.me/blogs/ad_trust/</guid>
      <description>Intro I&amp;rsquo;ve been playing around with FreeIPA in my homelab for a while and have always wanted to enable seamless authentication between all my hosts regardless of their operating system. I stumbled upon the concept of cross-domain trusts between FreeIPA and Active Directory which allows us to achieve this.
There is a caveat though, and that is that two-way trusts are still not fully implemented in FreeIPA, which means Windows users can authenticate against Linux hosts but Linux users can&amp;rsquo;t do the same the other way around.</description>
    </item>
    
    <item>
      <title>Starting a VM in Proxmox without Quorum</title>
      <link>https://kovasky.me/blogs/oneshot/</link>
      <pubDate>Wed, 01 Nov 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kovasky.me/blogs/oneshot/</guid>
      <description>Intro One of the nodes in my lab runs PfSense and if the vm is down, my network is down. This prevents my nodes from reaching quorum, and thus preventing PfSense from starting. To solve this, I needed a way for the vm to start without quorum. This was achieved by creating a oneshot service that runs at system startup.
Create the script Create a script in a folder of your choice, like /root/startPfSense.</description>
    </item>
    
    <item>
      <title>Homelab</title>
      <link>https://kovasky.me/blogs/homelab/</link>
      <pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kovasky.me/blogs/homelab/</guid>
      <description>Intro This is just a post to describe my homelab setup and make it linkable where needed (like in my resume). This is most definitely subject to change at any time as I continue to play with new technologies and keep adding things!
Check out my uptime here.
Hosts My homelab consists of a 2 node proxmox cluster + 1 quorum device. The hosts are a 2010 Mac Pro as well as a M910X Thinkcentre Tiny and the qdevice is a nanopi neo.</description>
    </item>
    
    <item>
      <title>Whitelisting in Suricata Package for PfSense</title>
      <link>https://kovasky.me/blogs/whitelist/</link>
      <pubDate>Wed, 13 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kovasky.me/blogs/whitelist/</guid>
      <description>Intro After tirelessly looking for a solution in order to dynamically create a whitelist for Suricata based on DNS, I decided to create my own.
Download the necessary files Create a whitelist file with all the domains you wish whitelisted. A useful starting point is anudeepND&amp;rsquo;s collection of commonly white listed domains. After that, download my generateRules.py script.
Place these files in a directory of your choice on your PfSense host.</description>
    </item>
    
    <item>
      <title>Automatically create local home directory when logging in with FreeIPA</title>
      <link>https://kovasky.me/blogs/homecreation/</link>
      <pubDate>Wed, 07 Jun 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kovasky.me/blogs/homecreation/</guid>
      <description>Intro While setting up my hosts with FreeIPA, I noticed that home directories were not being created when logging in through ssh. Looking online it seems that most people just use NFS shares to keep home directories the same across devices but I did not want to set up NFS home shares. Fixing this in RHEL-based distros is easy with authconfig but debian-based distros do not come with this. To fix this in debian-based distros is as easy as modiyfing the pam.</description>
    </item>
    
    <item>
      <title>NTP server with GPS and chrony</title>
      <link>https://kovasky.me/blogs/chronyd/</link>
      <pubDate>Fri, 07 Apr 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kovasky.me/blogs/chronyd/</guid>
      <description>Intro I wanted to easily synchronize the time between my VMs and decided to set up an ntp server to accomplish this. Since a USB GPS device is relatively inexpensive, I thought it would be a great addition to the project.
For the following examples, I used aptitude and vim.
Prerequisite Packages Run the following command to ensure we have the necessary packages:
sudo apt-get update &amp;amp;&amp;amp; sudo apt-get install gpsd gpsd-clients chrony Check /dev for GPS Once the gps is connected to the pc, we need to figure out the assigned device.</description>
    </item>
    
  </channel>
</rss>
