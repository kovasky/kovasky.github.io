<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>PfSense on Kovasky Buezo</title>
    <link>https://kovasky.me/tags/pfsense/</link>
    <description>Recent content in PfSense on Kovasky Buezo</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 30 Oct 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://kovasky.me/tags/pfsense/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Homelab</title>
      <link>https://kovasky.me/blogs/homelab/</link>
      <pubDate>Mon, 30 Oct 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kovasky.me/blogs/homelab/</guid>
      <description>Intro This is just a post to describe my homelab setup and make it linkable where needed (like in my resume). This is most definitely subject to change at any time as I continue to play with new technologies and keep adding things!
Check out my uptime here.
Hosts My homelab consists of a 2 node proxmox cluster + 1 quorum device. The hosts are a 2010 Mac Pro as well as a M910X Thinkcentre Tiny and the qdevice is a nanopi neo.</description>
    </item>
    
    <item>
      <title>Whitelisting in Suricata Package for PfSense</title>
      <link>https://kovasky.me/blogs/whitelist/</link>
      <pubDate>Wed, 13 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kovasky.me/blogs/whitelist/</guid>
      <description>Intro After tirelessly looking for a solution in order to dynamically create a whitelist for Suricata based on DNS, I decided to create my own.
Download the necessary files Create a whitelist file with all the domains you wish whitelisted. A useful starting point is anudeepND&amp;rsquo;s collection of commonly white listed domains. After that, download my generateRules.py script.
Place these files in a directory of your choice on your PfSense host.</description>
    </item>
    
  </channel>
</rss>
