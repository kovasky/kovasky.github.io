<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Linux on Kovasky Buezo | Software Developer, Cybersecurity Enthusiast</title><link>https://kovasky.me/tags/linux/</link><description>Recent content in Linux on Kovasky Buezo | Software Developer, Cybersecurity Enthusiast</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 03 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://kovasky.me/tags/linux/index.xml" rel="self" type="application/rss+xml"/><item><title>Set up centralized SSH key storage for external Active Directory users in FreeIPA (including FIDO2 hardware keys)</title><link>https://kovasky.me/blogs/ad_trust_ssh/</link><pubDate>Mon, 03 Feb 2025 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/ad_trust_ssh/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>I was tired of entering my password every time I SSH&amp;rsquo;d to my VMs, but setting up SSH keys would mean manually copying my public key to each host I wanted to connect to. I then read about one key feature of FreeIPA, which is serving as a centralized key repository.&lt;/p>
&lt;p>This posed another problem: I donâ€™t have any users in FreeIPA, as I mainly use my AD credentials (FreeIPA is one way only, and many services interact directly with Active Directory). Hereâ€™s how I generated and stored my AD userâ€™s public key in FreeIPA, which allows me to remote into any enrolled device without manually distributing the keys.&lt;/p></description></item><item><title>Enabling SR-IOV for an Intel X540-T2 on Proxmox 8</title><link>https://kovasky.me/blogs/sr_iov/</link><pubDate>Mon, 12 Aug 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/sr_iov/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>In the quest to get more performance out of my inter-vm communication, I stumbled upon SR-IOV and virtual functions. I then purchased a 10gbe X540-T2 from a Chinese seller on eBay making sure to get one with a fan, as reports of this specific card say it runs quite hot. After setting everything up, I increased my network performance from 2.5gbps on a vSwitch to 14gbps with virtual function passthrough.&lt;/p></description></item><item><title>How to configure a MeshCentral client to replace Xwayland with Xorg</title><link>https://kovasky.me/blogs/meshcentral_xorg/</link><pubDate>Sat, 13 Jul 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/meshcentral_xorg/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>After deploying the MeshCentral agents to my VMs, I noticed that some of them produced an error screen complaining about Xwayland. This was as simple as modifying a config file and restarting a service.&lt;/p>
&lt;h2 id="modifying-customconf">Modifying custom.conf&lt;/h2>
&lt;p>Depending on your system, you will have to navigate to /etc/gdm or /etc/gdm3. Inside this folder you will find a file named custom.conf. It will look something like:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># GDM configuration storage&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>daemon&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Uncomment the line below to force the login screen to use Xorg&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#WaylandEnable=false&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>security&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>xdmcp&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>chooser&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>debug&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e"># Uncomment the line below to turn on debugging&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#75715e">#Enable=true&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>All you have to do, is uncomment the line WaylandEnable=false. After doing so, it should look like:&lt;/p></description></item><item><title>Enable implicit consent for clients using Authelia OIDC</title><link>https://kovasky.me/blogs/no_consent/</link><pubDate>Sun, 02 Jun 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/no_consent/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>Enabling SSO for all self-hosted services that support it has been one of the best decisions in my homelab. It has created a seamless &amp;ldquo;ecosystem&amp;rdquo; experience for my friends and family (mainly myself ðŸ¥²). The problem is that every time I logged in to my services, it prompted me with a consent form which I quickly grew tired of. To remove this consent page in all my connected OIDC clients, I enabled implicit consent.&lt;/p></description></item><item><title>Set up Plausible Analytics Community Edition (self-hosted)</title><link>https://kovasky.me/blogs/plausible/</link><pubDate>Mon, 13 May 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/plausible/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>In the search for an open-source Google Analytics alternative, two options stood out Matomo and Plausible. I wanted the tool to be privacy-friendly and that it did not require cookies, avoiding those pesky consent prompts. I did not find a straightforward guide to self-host Plausible with a Google Search Console integration which led me to create this post.&lt;/p>
&lt;h2 id="pre-requisite">Pre-requisite&lt;/h2>
&lt;p>Ensure that your domain&amp;rsquo;s ownership is confirmed in the Google Search Console. To do this, take a look at Google&amp;rsquo;s guide &lt;a href="https://support.google.com/webmasters/answer/34592?hl=en">here&lt;/a>.&lt;/p></description></item><item><title>Set up Outline Wiki with local object storage and OIDC integration</title><link>https://kovasky.me/blogs/get_outline/</link><pubDate>Tue, 07 May 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/get_outline/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>I started using Notion&amp;rsquo;s free tier as a knowledge bank for a side project. It&amp;rsquo;s measley 1000 blocks were capped quickly and searching for an alternative lead to Outline. Outline is 100% free, selfhostable, and has a very similar featureset.&lt;/p>
&lt;p>Most of the guides out there configure Outline with an S3 store for object storage, but I do not really have a need for it. Also, I wanted to integrate Outline with Authelia for integration with my Active Directory server as well as Fail2Ban.&lt;/p></description></item><item><title>Set up a ramdisk for Plex</title><link>https://kovasky.me/blogs/plex_ramdisk/</link><pubDate>Wed, 01 May 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/plex_ramdisk/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>Always on the lookout to decrease writes on my consumer SSDs, I stumbled upon the idea of a ramdisk for Plex transcodes. In theory it should offer a performance boost, but in practice I did not really notice any improvements besides lowering SSD writes.&lt;/p>
&lt;h2 id="editing-fstab">Editing fstab&lt;/h2>
&lt;p>Navigate to /etc/fstab and open it for edition. You should see your boot disk and any other mapped media there. Add the following line:&lt;/p></description></item><item><title>iDRAC 9 manual fan control on Dell PowerEdge servers</title><link>https://kovasky.me/blogs/fan_control/</link><pubDate>Mon, 15 Apr 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/fan_control/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>I recently acquired a Dell Poweredge T440, and after installing a GPU the fans skyrocketed. This turned the server into a noise machine. To solve this, I created a script that disables third-party PCI mode and based on a threshold, set the fan speed to 20% or to be controlled by Dell&amp;rsquo;s fan profile. These are the steps I took to make my T440 silent again.&lt;/p>
&lt;h2 id="downgrading-idrac-9-firmware-to-3303030">Downgrading iDRAC 9 firmware to 3.30.30.30&lt;/h2>
&lt;p>For this whole setup to work, iDRAC needs to be on firmware 3.30.30.30, as later firmware revisions remove the ability to control the fan speed. The firmware can be downloaded from &lt;a href="https://www.dell.com/support/home/en-us">Dell&amp;rsquo;s website&lt;/a>. To downgrade, navigate to your iDRAC&amp;rsquo;s web admin page, and under Maintenance-&amp;gt;System Update you can apply the downgrade. After the downgrade, make sure IPMI over LAN is enabled under iDRAC Settings-&amp;gt;Connectivity-&amp;gt;Network-&amp;gt;IPMI Settings.&lt;/p></description></item><item><title>Disk passthrough for vms in Proxmox</title><link>https://kovasky.me/blogs/disk_passthrough/</link><pubDate>Thu, 04 Apr 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/disk_passthrough/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>It has always been recommended to give ZFS full disk control, so after placing my raid card in HBA mode, I went ahead and gave full disk control to my TrueNAS vm.&lt;/p>
&lt;h2 id="figuring-out-the-id-of-the-disk">Figuring out the id of the disk&lt;/h2>
&lt;p>Typically, disks are labeled as /dev/sdX, but this can change when adding other drives or moving them around. To circumvent this, it is better to figure out the specific id of the disk to be passed through. To do this, execute the following:&lt;/p></description></item><item><title>Replace the default shell for domain users on Linux</title><link>https://kovasky.me/blogs/login_shell/</link><pubDate>Tue, 02 Apr 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/login_shell/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>After setting up the AD trust, every time I logged in the shell defaulted to /bin/sh. To change it to /bin/bash or any other shell of your choice you can do the following.&lt;/p>
&lt;h2 id="editing-sssdconf">Editing SSSD.conf&lt;/h2>
&lt;p>Navigate to /etc/sssd/ and open sssd.conf in an elevated text editor. It should look something like&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>domain/lin.mydomain.com&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>use_fully_qualified_names &lt;span style="color:#f92672">=&lt;/span> false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>domain/lin.mydomain.com/win.mydomain.com&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>use_fully_qualified_names &lt;span style="color:#f92672">=&lt;/span> false
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>sssd&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>After each domain, add your override shell. Something like:&lt;/p></description></item><item><title>Using Fail2Ban with Cloudflare on a free account</title><link>https://kovasky.me/blogs/cloudflare_fail2ban/</link><pubDate>Mon, 25 Mar 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/cloudflare_fail2ban/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>To better protect my web accessible services, I decided to use Fail2Ban in conjunction with Cloudflare&amp;rsquo;s WAF to block IPs with more than 3 failed login attempts. I already leverage Cloudflare&amp;rsquo;s CDN and geo-blocking capabilities on my homelab, so I opted to utilize their WAF to block access to potential attackers.&lt;/p>
&lt;p>On the free tier, the WAF is limited to 5 rules, which can easily reach their limit. A workaround is to create a rule that uses a blocklist and then with the Lists API, update it as required.&lt;/p></description></item><item><title>Map an Active Directory group to sudo in Linux</title><link>https://kovasky.me/blogs/mapping_sudo/</link><pubDate>Wed, 21 Feb 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/mapping_sudo/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>After creating my domain trust between AD and FreeIPA, I was left wanting to access restricted resources in Linux using my AD accounts. To circumvent this, I mapped a group from AD to FreeIPA and gave it the appropriate permissions.&lt;/p>
&lt;h2 id="create-the-group-in-ad">Create the group in AD&lt;/h2>
&lt;p>The first step would be to create a group in AD to which sudo will be mapped. In my case, I created a group named &amp;lsquo;sudo&amp;rsquo; to match the Linux counterpart. To do this, navigate to Server Manager -&amp;gt; Active Directory Users and Computers -&amp;gt; Users. Then, right-click and go to New -&amp;gt; Group. In the name, type &amp;lsquo;sudo&amp;rsquo;. After the item is created, it should look like:&lt;/p></description></item><item><title>Log in to Linux using AD credentials without specifying the domain</title><link>https://kovasky.me/blogs/no_domain_login/</link><pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/no_domain_login/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>After creating a trust in FreeIPA, I kept having to write the full domain alongside my username whenever I tried to access the system. These are the steps I took to log in only with my username.&lt;/p>
&lt;h2 id="editing-sssdconf">Editing SSSD.conf&lt;/h2>
&lt;p>Navigate to /etc/sssd/ and open sssd.conf in an elevated text editor. It should look something like&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" style="color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-bash" data-lang="bash">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>domain/lin.mydomain.com&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>...
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#f92672">[&lt;/span>sssd&lt;span style="color:#f92672">]&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>services &lt;span style="color:#f92672">=&lt;/span> nss, pam, ssh, sudo
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>domains &lt;span style="color:#f92672">=&lt;/span> lin.mydomain.com&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;p>Before [sssd], add your trusted domain. Something like:&lt;/p></description></item><item><title>Setting up a cross-domain trust between FreeIPA and AD</title><link>https://kovasky.me/blogs/ad_trust/</link><pubDate>Fri, 16 Feb 2024 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/ad_trust/</guid><description>&lt;h2 id="intro">Intro&lt;/h2>
&lt;p>I&amp;rsquo;ve been playing around with FreeIPA in my homelab for a while and have always wanted to enable seamless authentication between all my hosts regardless of their operating system. I stumbled upon the concept of cross-domain trusts between FreeIPA and Active Directory which allows us to achieve this.&lt;/p>
&lt;p>There is a caveat though, and that is that two-way trusts are still not fully implemented in FreeIPA, which means Windows users can authenticate against Linux hosts but Linux users can&amp;rsquo;t do the same the other way around.&lt;/p></description></item></channel></rss>