<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>AD on Kovasky Buezo | Software Developer, Cybersecurity Enthusiast</title><link>https://kovasky.me/tags/ad/</link><description>Recent content in AD on Kovasky Buezo | Software Developer, Cybersecurity Enthusiast</description><generator>Hugo</generator><language>en</language><lastBuildDate>Mon, 03 Feb 2025 00:00:00 +0000</lastBuildDate><atom:link href="https://kovasky.me/tags/ad/index.xml" rel="self" type="application/rss+xml"/><item><title>Set up centralized SSH key storage for external Active Directory users in FreeIPA (including FIDO2 hardware keys)</title><link>https://kovasky.me/blogs/ad_trust_ssh/</link><pubDate>Mon, 03 Feb 2025 00:00:00 +0000</pubDate><guid>https://kovasky.me/blogs/ad_trust_ssh/</guid><description>&lt;h2 id="intro"&gt;Intro&lt;/h2&gt;
&lt;p&gt;I was tired of entering my password every time I SSH&amp;rsquo;d to my VMs, but setting up SSH keys would mean manually copying my public key to each host I wanted to connect to. I then read about one key feature of FreeIPA, which is serving as a centralized key repository.&lt;/p&gt;
&lt;p&gt;This posed another problem: I don’t have any users in FreeIPA, as I mainly use my AD credentials (FreeIPA is one way only, and many services interact directly with Active Directory). Here’s how I generated and stored my AD user’s public key in FreeIPA, which allows me to remote into any enrolled device without manually distributing the keys.&lt;/p&gt;</description></item></channel></rss>